{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/omarp/workspace/Shopify_Image_Repo_Challenge/Imagify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import Button from'react-bootstrap/Button';import{useHistory}from\"react-router-dom\";import*as FirestoreService from'../firebase/firestore';import Form from'react-bootstrap/Form';import imageCompression from'browser-image-compression';// import { useAuthState } from 'react-firebase-hooks/auth';\nimport{useCollectionData}from'react-firebase-hooks/firestore';import Image from\"./Image\";export default function Gallery(props){var history=useHistory();// const [images,setImages] = useState([]);\n// let querySearchType = \"uid\";\n// let querySearchValue = FirestoreService.auth.currentUser.uid;\nvar query=FirestoreService.db.collection('images').where(props.querySearchType,\"==\",props.querySearchValue);var _useCollectionData=useCollectionData(query,{idField:'id'}),_useCollectionData2=_slicedToArray(_useCollectionData,2),gallery=_useCollectionData2[0],loading=_useCollectionData2[1];return/*#__PURE__*/_jsx(\"div\",{children:!loading&&/*#__PURE__*/_jsx(Feed,{gallery:gallery})});}function Feed(props){var history=useHistory();console.log(props.gallery);var Images=props.gallery;useEffect(function(){if(!Images[0].publicPermission){console.log(\"private\");}},[]);var Feed=Images.map(function(image){var permission=\"Private\";if(image.publicPermission){permission=\"Public\";}return/*#__PURE__*/_jsx(Image,{url:image.url,permission:permission,id:image.id});});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"PRIVATE GALLERY\"}),Feed]});}","map":{"version":3,"sources":["/Users/omarp/workspace/Shopify_Image_Repo_Challenge/Imagify/src/components/Gallery.js"],"names":["React","useState","useRef","useEffect","Button","useHistory","FirestoreService","Form","imageCompression","useCollectionData","Image","Gallery","props","history","query","db","collection","where","querySearchType","querySearchValue","idField","gallery","loading","Feed","console","log","Images","publicPermission","map","image","permission","url","id"],"mappings":"0QAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAkD,OAAlD,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAO,GAAKC,CAAAA,gBAAZ,KAAkC,uBAAlC,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CACA;AACA,OAASC,iBAAT,KAAkC,gCAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACnC,GAAIC,CAAAA,OAAO,CAAGR,UAAU,EAAxB,CACA;AACA;AACA;AACA,GAAMS,CAAAA,KAAK,CAAGR,gBAAgB,CAACS,EAAjB,CAAoBC,UAApB,CAA+B,QAA/B,EAAyCC,KAAzC,CAA+CL,KAAK,CAACM,eAArD,CAAsE,IAAtE,CAA4EN,KAAK,CAACO,gBAAlF,CAAd,CALmC,uBAMRV,iBAAiB,CAACK,KAAD,CAAQ,CAACM,OAAO,CAAE,IAAV,CAAR,CANT,0DAM5BC,OAN4B,wBAMnBC,OANmB,wBAQnC,mBACI,qBACI,CAACA,OAAD,eAAY,KAAC,IAAD,EAAM,OAAO,CAAED,OAAf,EADhB,EADJ,CAKH,CAED,QAASE,CAAAA,IAAT,CAAcX,KAAd,CAAoB,CAChB,GAAIC,CAAAA,OAAO,CAAGR,UAAU,EAAxB,CACAmB,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACS,OAAlB,EACA,GAAMK,CAAAA,MAAM,CAAGd,KAAK,CAACS,OAArB,CAEAlB,SAAS,CAAC,UAAM,CACZ,GAAG,CAACuB,MAAM,CAAC,CAAD,CAAN,CAAUC,gBAAd,CAA+B,CAC3BH,OAAO,CAACC,GAAR,CAAY,SAAZ,EACH,CACJ,CAJQ,CAIN,EAJM,CAAT,CAKA,GAAMF,CAAAA,IAAI,CAAGG,MAAM,CAACE,GAAP,CAAW,SAACC,KAAD,CAAW,CAC/B,GAAIC,CAAAA,UAAU,CAAG,SAAjB,CACA,GAAGD,KAAK,CAACF,gBAAT,CAA0B,CACtBG,UAAU,CAAG,QAAb,CACH,CACD,mBAAO,KAAC,KAAD,EAAO,GAAG,CAAED,KAAK,CAACE,GAAlB,CAAuB,UAAU,CAAED,UAAnC,CAA+C,EAAE,CAAED,KAAK,CAACG,EAAzD,EAAP,CAAsE,CAL7D,CAAb,CAOA,mBACI,oCACG,uCADH,CAEIT,IAFJ,GADJ,CAMH","sourcesContent":["import React, { useState, useRef, useEffect} from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form';\nimport imageCompression from 'browser-image-compression';\n// import { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport Image from \"./Image\";\n\nexport default function Gallery(props) {\n    let history = useHistory();\n    // const [images,setImages] = useState([]);\n    // let querySearchType = \"uid\";\n    // let querySearchValue = FirestoreService.auth.currentUser.uid;\n    const query = FirestoreService.db.collection('images').where(props.querySearchType, \"==\", props.querySearchValue);\n    const [gallery, loading] = useCollectionData(query, {idField: 'id'});\n\n    return (\n        <div>\n           {!loading && <Feed gallery={gallery}/> }    \n        </div> \n    )\n}\n\nfunction Feed(props){\n    let history = useHistory();\n    console.log(props.gallery);\n    const Images = props.gallery;\n   \n    useEffect(() => {\n        if(!Images[0].publicPermission){\n            console.log(\"private\")\n        }\n    }, [])   \n    const Feed = Images.map((image) => {\n        let permission = \"Private\";\n        if(image.publicPermission){\n            permission = \"Public\";\n        }\n        return <Image url={image.url} permission={permission} id={image.id}/>});\n\n    return (\n        <div>\n           <h1>PRIVATE GALLERY</h1> \n           {Feed}\n        </div> \n    )\n}"]},"metadata":{},"sourceType":"module"}