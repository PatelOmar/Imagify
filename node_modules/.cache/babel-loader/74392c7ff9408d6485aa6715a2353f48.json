{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/omarp/workspace/Shopify_Image_Repo_Challenge/Imagify/src/components/Gallery.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form';\nimport imageCompression from 'browser-image-compression'; // import { useAuthState } from 'react-firebase-hooks/auth';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport Image from \"./Image\";\nexport default function Gallery(props) {\n  _s();\n\n  let history = useHistory(); // const [images,setImages] = useState([]);\n  // let querySearchType = \"uid\";\n  // let querySearchValue = FirestoreService.auth.currentUser.uid;\n\n  const query = FirestoreService.db.collection('images').where(props.querySearchType, \"==\", props.querySearchValue);\n  const [gallery, loading] = useCollectionData(query, {\n    idField: 'id'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loading && /*#__PURE__*/_jsxDEV(Feed, {\n      gallery: gallery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gallery, \"Ya9dXPicMNDdMeRwbYopcpIqL2Y=\", false, function () {\n  return [useHistory, useCollectionData];\n});\n\n_c = Gallery;\n\nfunction Feed(props) {\n  _s2();\n\n  let history = useHistory();\n  console.log(props.gallery);\n  const Images = props.gallery;\n  useEffect(() => {\n    if (!Images[0].publicPermission) {\n      console.log(\"private\");\n    }\n  }, []);\n  const Feed = Images.map(image => {\n    let permission = \"Private\";\n\n    if (image.publicPermission) {\n      permission = \"Public\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(Image, {\n      url: image.url,\n      permission: permission,\n      id: image.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PRIVATE GALLERY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this), Feed]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Feed, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = Feed;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Gallery\");\n$RefreshReg$(_c2, \"Feed\");","map":{"version":3,"sources":["/Users/omarp/workspace/Shopify_Image_Repo_Challenge/Imagify/src/components/Gallery.js"],"names":["React","useState","useRef","useEffect","Button","useHistory","FirestoreService","Form","imageCompression","useCollectionData","Image","Gallery","props","history","query","db","collection","where","querySearchType","querySearchValue","gallery","loading","idField","Feed","console","log","Images","publicPermission","map","image","permission","url","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,KAAKC,gBAAZ,MAAkC,uBAAlC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B,C,CACA;;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,MAAIC,OAAO,GAAGR,UAAU,EAAxB,CADmC,CAEnC;AACA;AACA;;AACA,QAAMS,KAAK,GAAGR,gBAAgB,CAACS,EAAjB,CAAoBC,UAApB,CAA+B,QAA/B,EAAyCC,KAAzC,CAA+CL,KAAK,CAACM,eAArD,EAAsE,IAAtE,EAA4EN,KAAK,CAACO,gBAAlF,CAAd;AACA,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBZ,iBAAiB,CAACK,KAAD,EAAQ;AAACQ,IAAAA,OAAO,EAAE;AAAV,GAAR,CAA5C;AAEA,sBACI;AAAA,cACI,CAACD,OAAD,iBAAY,QAAC,IAAD;AAAM,MAAA,OAAO,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA;AADhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAbuBT,O;UACNN,U,EAKaI,iB;;;KANPE,O;;AAexB,SAASY,IAAT,CAAcX,KAAd,EAAoB;AAAA;;AAChB,MAAIC,OAAO,GAAGR,UAAU,EAAxB;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACQ,OAAlB;AACA,QAAMM,MAAM,GAAGd,KAAK,CAACQ,OAArB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACuB,MAAM,CAAC,CAAD,CAAN,CAAUC,gBAAd,EAA+B;AAC3BH,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAKA,QAAMF,IAAI,GAAGG,MAAM,CAACE,GAAP,CAAYC,KAAD,IAAW;AAC/B,QAAIC,UAAU,GAAG,SAAjB;;AACA,QAAGD,KAAK,CAACF,gBAAT,EAA0B;AACtBG,MAAAA,UAAU,GAAG,QAAb;AACH;;AACD,wBAAO,QAAC,KAAD;AAAO,MAAA,GAAG,EAAED,KAAK,CAACE,GAAlB;AAAuB,MAAA,UAAU,EAAED,UAAnC;AAA+C,MAAA,EAAE,EAAED,KAAK,CAACG;AAAzD;AAAA;AAAA;AAAA;AAAA,YAAP;AAAsE,GAL7D,CAAb;AAOA,sBACI;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAEIT,IAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;IAvBQA,I;UACSlB,U;;;MADTkB,I","sourcesContent":["import React, { useState, useRef, useEffect} from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form';\nimport imageCompression from 'browser-image-compression';\n// import { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport Image from \"./Image\";\n\nexport default function Gallery(props) {\n    let history = useHistory();\n    // const [images,setImages] = useState([]);\n    // let querySearchType = \"uid\";\n    // let querySearchValue = FirestoreService.auth.currentUser.uid;\n    const query = FirestoreService.db.collection('images').where(props.querySearchType, \"==\", props.querySearchValue);\n    const [gallery, loading] = useCollectionData(query, {idField: 'id'});\n\n    return (\n        <div>\n           {!loading && <Feed gallery={gallery}/> }    \n        </div> \n    )\n}\n\nfunction Feed(props){\n    let history = useHistory();\n    console.log(props.gallery);\n    const Images = props.gallery;\n   \n    useEffect(() => {\n        if(!Images[0].publicPermission){\n            console.log(\"private\")\n        }\n    }, [])   \n    const Feed = Images.map((image) => {\n        let permission = \"Private\";\n        if(image.publicPermission){\n            permission = \"Public\";\n        }\n        return <Image url={image.url} permission={permission} id={image.id}/>});\n\n    return (\n        <div>\n           <h1>PRIVATE GALLERY</h1> \n           {Feed}\n        </div> \n    )\n}"]},"metadata":{},"sourceType":"module"}