{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/omarp/workspace/Shopify_Image_Repo_Challenge/Imagify/src/components/Image.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form';\nimport imageCompression from 'browser-image-compression'; // import { useAuthState } from 'react-firebase-hooks/auth';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'; // import SignIn from \"./SignIn\";\n\nexport default function Image(props) {\n  _s();\n\n  const [clickDisabled, setClickDisabled] = useState(false);\n  const [permissionValue, setPermissionValue] = useState(props.permission);\n\n  const handleSelect = async eventKey => {\n    setClickDisabled(true);\n    let permission = false;\n    let toggleValue = \"Private\";\n\n    if (eventKey === \"false\") {\n      permission = false;\n      toggleValue = \"Private\";\n    } else {\n      permission = true;\n      toggleValue = \"Public\";\n    }\n\n    let updateProgress = await FirestoreService.updateImagePermission(props.id, permission);\n\n    if (updateProgress) {\n      setPermissionValue(toggleValue);\n      console.log(\"Successful!\");\n    } else {\n      console.log(\"Not Successful!\");\n    }\n\n    setTimeout(function () {\n      setClickDisabled(false);\n    }, 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Image-Card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.url,\n      height: 300,\n      width: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Permissions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        onSelect: handleSelect,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          disabled: clickDisabled,\n          children: permissionValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"true\",\n            children: \"Public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"false\",\n            children: \"Private\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Image, \"1Pzi/llzWz4FnEzyemoFYodcOvc=\");\n\n_c = Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"sources":["/Users/omarp/workspace/Shopify_Image_Repo_Challenge/Imagify/src/components/Image.js"],"names":["React","useState","useRef","useEffect","Button","useHistory","FirestoreService","Form","imageCompression","useCollectionData","DropdownButton","Dropdown","Image","props","clickDisabled","setClickDisabled","permissionValue","setPermissionValue","permission","handleSelect","eventKey","toggleValue","updateProgress","updateImagePermission","id","console","log","setTimeout","url"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,KAAKC,gBAAZ,MAAkC,uBAAlC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B,C,CACA;;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB,C,CAEA;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACjC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAACY,KAAK,CAACK,UAAP,CAAtD;;AACA,QAAMC,YAAY,GAAG,MAAMC,QAAN,IAAmB;AACpCL,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,QAAIG,UAAU,GAAG,KAAjB;AACA,QAAIG,WAAW,GAAG,SAAlB;;AACA,QAAGD,QAAQ,KAAK,OAAhB,EAAwB;AACpBF,MAAAA,UAAU,GAAG,KAAb;AACAG,MAAAA,WAAW,GAAG,SAAd;AACH,KAHD,MAGO;AACHH,MAAAA,UAAU,GAAG,IAAb;AACAG,MAAAA,WAAW,GAAG,QAAd;AACH;;AACD,QAAIC,cAAc,GAAG,MAAMhB,gBAAgB,CAACiB,qBAAjB,CAAuCV,KAAK,CAACW,EAA7C,EAAiDN,UAAjD,CAA3B;;AACA,QAAGI,cAAH,EAAkB;AACdL,MAAAA,kBAAkB,CAACI,WAAD,CAAlB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KAHD,MAGO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;AACDC,IAAAA,UAAU,CAAC,YAAU;AAAEZ,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAA0B,KAAvC,EAAyC,IAAzC,CAAV;AACH,GAnBD;;AAoBA,sBACI;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEF,KAAK,CAACe,GAAhB;AAAqB,MAAA,MAAM,EAAE,GAA7B;AAAkC,MAAA,KAAK,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAET,YAApB;AAAA,gCACI,QAAC,QAAD,CAAU,MAAV;AAAiB,UAAA,QAAQ,EAAEL,aAA3B;AAAA,oBACKE;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,QAAD,CAAU,IAAV;AAAA,kCACI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,QAAQ,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,QAAQ,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAzCuBJ,K;;KAAAA,K","sourcesContent":["import React, { useState, useRef, useEffect} from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form';\nimport imageCompression from 'browser-image-compression';\n// import { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n// import SignIn from \"./SignIn\";\n\nexport default function Image(props) {\n    const [clickDisabled, setClickDisabled] = useState(false);\n    const [permissionValue, setPermissionValue] = useState(props.permission);\n    const handleSelect = async(eventKey) => {\n        setClickDisabled(true);\n        let permission = false;\n        let toggleValue = \"Private\";\n        if(eventKey === \"false\"){\n            permission = false;\n            toggleValue = \"Private\";\n        } else {\n            permission = true;\n            toggleValue = \"Public\";\n        }\n        let updateProgress = await FirestoreService.updateImagePermission(props.id, permission);\n        if(updateProgress){\n            setPermissionValue(toggleValue);\n            console.log(\"Successful!\");\n        } else {\n            console.log(\"Not Successful!\");\n        }\n        setTimeout(function(){ setClickDisabled(false); }, 5000);\n    }\n    return (\n        <section className=\"Image-Card\">\n            <img src={props.url} height={300} width={300}/>\n            <section>\n                <h3>Permissions:</h3>\n                <Dropdown onSelect={handleSelect}>\n                    <Dropdown.Toggle disabled={clickDisabled}>\n                        {permissionValue}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"true\" >Public</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"false\" >Private</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </section>\n        </section> \n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}