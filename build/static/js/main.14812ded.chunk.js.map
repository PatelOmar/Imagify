{"version":3,"sources":["firebase/firestore.js","components/SignIn.js","components/SignedIn.js","pages/Home.js","components/Image.js","components/Gallery.js","pages/Private.js","pages/Public.js","components/Header.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["require","config","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","authSignIn","a","provider","GoogleAuthProvider","signInWithPopup","uploadImage","url","collection","add","uid","currentUser","publicPermission","console","log","updateImagePermission","id","permission","doc","update","SignIn","useHistory","className","Button","variant","size","onClick","FirestoreService","SignedIn","useState","setImages","compressedImages","setCompressedImages","click","setClick","fileInput","useRef","handleChange","e","options","maxSizeMB","maxWidthOrHeight","useWebWorker","tempCompressedImages","tempImages","files","target","i","length","imageCompression","compressedFile","push","error","handleUpload","ref","name","put","uploadTask","task","on","snapshot","child","getDownloadURL","then","uploaded","style","display","type","onChange","current","disabled","Home","useAuthState","user","Image","props","clickDisabled","setClickDisabled","permissionValue","setPermissionValue","handleSelect","eventKey","toggleValue","setTimeout","src","height","width","Dropdown","onSelect","Toggle","Menu","Item","Gallery","query","where","querySearchType","querySearchValue","useCollectionData","idField","gallery","loading","title","Feed","Images","useEffect","map","image","PrivateGallery","PublicGallery","history","userName","setUserName","displayName","SignOut","AccountInfo","signOut","AppRouter","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14812ded.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport \"firebase/storage\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nrequire('dotenv').config();\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\n    projectId: process.env.REACT_APP_PORJECTID,\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n    appId: process.env.REACT_APP_APPID,\n    measurementId: process.env.REACT_APP_MEASUREMENTID\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase.firestore();\nexport const auth = firebase.auth();\nexport const storage = firebase.storage();\n\nexport const authSignIn = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n}\n\nexport const uploadImage = async (url) => {\n    try{\n        await db.collection('images').add({\n            url: url,\n            uid: auth.currentUser.uid,\n            publicPermission: false,\n        });\n        \n        return true;\n    } catch (err){\n        console.log(err);\n        return false;\n    }\n}\n\nexport const updateImagePermission = async (id, permission) => {\n    try{\n        console.log(permission);\n        await db.collection('images').doc(id).update({\n            publicPermission: permission,\n        });\n        \n        return true;\n    } catch (err){\n        console.log(err);\n        return false;\n    }\n}","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form'\n\nexport default function SignIn() {\n    let history = useHistory();\n\n    \n    const handleSignIn = () =>{\n        FirestoreService.authSignIn();\n    }\n  \n    return (\n    <div className=\"Page-home-buttons\">\n        <Button variant=\"outline-primary\" size=\"lg\" onClick={handleSignIn}>Sign In</Button>\n    </div>  \n    );\n  }","import React, { useState, useRef } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form';\nimport imageCompression from 'browser-image-compression';\n\nexport default function SignedIn() {\n    let history = useHistory();\n    const [images,setImages] = useState([]);\n    const [compressedImages,setCompressedImages] = useState([]);\n    const [click,setClick] = useState(false);\n    const fileInput = useRef(null);\n\n    const handleChange = async(e) =>{\n        setClick(!click);\n        const options = {\n            maxSizeMB: 1,\n            maxWidthOrHeight: 1920,\n            useWebWorker: true\n        }\n        console.log(\"Started!\");\n        let tempCompressedImages = [];\n        let tempImages = [];\n        const files = e.target.files;\n        for (let i = 0; i < files.length; i++){\n            if(e.target.files[i]){\n                try {\n                    const compressedFile = await imageCompression(e.target.files[i], options);\n                    tempCompressedImages.push(compressedFile);\n                    tempImages.push(e.target.files[i]);\n                    } catch (error) {\n                    console.log(error);\n                    }\n            }\n        }\n        try{\n            setCompressedImages(tempCompressedImages);\n            setImages(tempImages);\n        }   catch (error) {\n            console.log(error);\n        }\n        console.log(\"Files ready for upload!\");\n        setClick(!click);\n        // if(e.target.files[0]){\n        //     try {\n        //         console.log(\"Started\");\n        //         const compressedFile = await imageCompression(e.target.files[0], options);\n        //         console.log(\"worked\");\n        //         setCompressedImage(compressedFile);\n        //         setImage(e.target.files[0]);\n        //         // await uploadToServer(compressedFile); // write your own logic\n        //       } catch (error) {\n        //         console.log(error);\n        //       }\n        // }\n        \n    }\n    const handleUpload = async() =>{\n        // console.log(image);\n        // console.log(compressedImage);\n        setClick(!click);\n        for (let i = 0; i < compressedImages.length; i++){\n            const uploadTask = await FirestoreService.storage.ref(`images/${compressedImages[i].name}`).put(compressedImages[i]);\n            console.log(\"Uploaded\");\n            uploadTask.task.on(\"state_changed\", \n                            snapshot => {}, \n                            error =>{\n                                console.log(error);\n                            },\n                            () =>  {\n                                FirestoreService.storage.ref(\"images\").child(compressedImages[i].name).getDownloadURL().then(async (url) => {\n                                    // console.log(url);\n                                    \n                                    let uploaded = await FirestoreService.uploadImage(url);\n                                    console.log(\"Uploaded: \"+uploaded);\n                                });\n                            });\n        }  \n        console.log(\"Uploaded!\");\n        setCompressedImages([]);\n        setImages([]);  \n        setClick(!click);       \n    }\n    function handleClick() {\n        fileInput.current.click();\n      }\n    return (\n        <div>\n            <div className=\"Page-home-buttons\">\n                <input style= {{display: \"none\"}} type=\"file\" onChange={handleChange} ref={fileInput}/>\n                <Button onClick={handleClick} variant=\"outline-info\"  size=\"lg\">Add Files</Button> \n                <span className=\"Spacer\"/>\n                <Button variant=\"outline-info\"  size=\"lg\" disabled={false} onClick={handleUpload}>Upload</Button> \n            </div> \n        </div> \n    )\n}","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form'\nimport SignIn from \"../components/SignIn\";\nimport SignedIn from \"../components/SignedIn\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nexport default function Home() {\n    const [user] = useAuthState(FirestoreService.auth);\n    return (\n    <body  className=\"App-body\">\n        {user ? <SignedIn />  : <SignIn /> } \n    </body>\n    );\n}","import React, { useState, useRef, useEffect} from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form';\nimport imageCompression from 'browser-image-compression';\n// import { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n// import SignIn from \"./SignIn\";\n\nexport default function Image(props) {\n    const [clickDisabled, setClickDisabled] = useState(false);\n    const [permissionValue, setPermissionValue] = useState(props.permission);\n    const handleSelect = async(eventKey) => {\n        setClickDisabled(true);\n        let permission = false;\n        let toggleValue = \"Private\";\n        if(eventKey === \"false\"){\n            permission = false;\n            toggleValue = \"Private\";\n        } else {\n            permission = true;\n            toggleValue = \"Public\";\n        }\n        let updateProgress = await FirestoreService.updateImagePermission(props.id, permission);\n        if(updateProgress){\n            setPermissionValue(toggleValue);\n            console.log(\"Successful!\");\n        } else {\n            console.log(\"Not Successful!\");\n        }\n        setTimeout(function(){ setClickDisabled(false); }, 5000);\n    }\n    return (\n        <section className=\"Image-Card\">\n            <img src={props.url} height={300} width={300}/>\n            <section>\n                <h3 className=\"Image-Perm-Header\">Permissions:</h3>\n                <Dropdown onSelect={handleSelect}>\n                    <Dropdown.Toggle disabled={clickDisabled}>\n                        {permissionValue}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"true\" >Public</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"false\" >Private</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </section>\n        </section> \n    )\n}\n\n","import React, { useState, useRef, useEffect} from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form';\nimport imageCompression from 'browser-image-compression';\n// import { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport Image from \"./Image\";\n\nexport default function Gallery(props) {\n    let history = useHistory();\n    // const [images,setImages] = useState([]);\n    // let querySearchType = \"uid\";\n    // let querySearchValue = FirestoreService.auth.currentUser.uid;\n    const query = FirestoreService.db.collection('images').where(props.querySearchType, \"==\", props.querySearchValue);\n    const [gallery, loading] = useCollectionData(query, {idField: 'id'});\n\n    return (\n        <div>\n            <h1 className=\"Gallery-Heading\">{props.title}</h1> \n           {!loading && <Feed gallery={gallery} /> }    \n        </div> \n    )\n}\n\nfunction Feed(props){\n    let history = useHistory();\n    console.log(props.gallery);\n    const Images = props.gallery;\n   \n    useEffect(() => {\n        if(!Images[0].publicPermission){\n            console.log(\"private\")\n        }\n    }, [])   \n    const Feed = Images.map((image) => {\n        let permission = \"Private\";\n        if(image.publicPermission){\n            permission = \"Public\";\n        }\n        return <Image url={image.url} permission={permission} id={image.id}/>});\n\n    return (\n        <div className=\"Feed\">\n           {Feed}\n        </div> \n    )\n}","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form'\nimport SignIn from \"../components/SignIn\";\nimport Gallery from \"../components/Gallery\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nexport default function PrivateGallery() {\n    const [user] = useAuthState(FirestoreService.auth);\n    return (\n    <body  className=\"App-body\">\n        {/* {user ? <Gallery querySearchType={\"publicPermission\"} querySearchValue={true}/> : <SignIn /> }  */}\n        {user ? <Gallery querySearchType={\"uid\"} querySearchValue={FirestoreService.auth.currentUser.uid} title={\"Personal Gallery\"}/> : <SignIn /> } \n    </body>\n    );\n}","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form'\nimport SignIn from \"../components/SignIn\";\nimport Gallery from \"../components/Gallery\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nexport default function PublicGallery() {\n    const [user] = useAuthState(FirestoreService.auth);\n\n    return (\n    <body  className=\"App-body\">\n        {/* {user ? <Gallery querySearchType={\"publicPermission\"} querySearchValue={true}/> : <SignIn /> }  */}\n        {user ? <Gallery querySearchType={\"publicPermission\"} querySearchValue={true} title={\"Public Gallery\"}/> : <SignIn /> } \n    </body>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../firebase/firestore';\nimport Form from 'react-bootstrap/Form'\nimport SignIn from \"../components/SignIn\";\nimport SignedIn from \"../components/SignedIn\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\n\nexport default function Home() {\n    let history = useHistory();\n    // const [user] = useAuthState(FirestoreService.auth);\n    const [userName, setUserName] = useState(\"No User Signed In\");\n    useEffect(() => {\n        if (FirestoreService.auth.currentUser){\n            setUserName(FirestoreService.auth.currentUser.displayName);\n        } else{\n            setUserName(\"No User Signed In\");\n        }\n    }, [])\n    return (\n    <section className=\"HeaderBar\">\n        <div className=\"LoginInfo\">\n            <SignOut />\n            <AccountInfo userName={userName}/>\n        </div>\n        <div>\n            <h1>Imagify</h1>\n        </div>\n        <div>\n            <Button className=\"Spacing\" onClick={() => history.push(\"/gallery/private\")} variant=\"outline-info\"  size=\"lg\">Personal Gallery</Button>\n            <Button className=\"Spacing\" onClick={() => history.push(\"/gallery/public\")} variant=\"outline-info\"  size=\"lg\">Public Gallery</Button>\n            <Button className=\"Spacing\" onClick={() => history.push(\"/\")} variant=\"outline-info\"  size=\"lg\">Upload Image</Button>\n        </div>\n    </section>\n    );\n}\n\nfunction SignOut() {\n    const handleSignOut = () => {\n        if(FirestoreService.auth.currentUser){\n            FirestoreService.auth.signOut()\n        } else{\n            console.log(\"No user signed in\");\n        }\n    }\n\n\n    return <Button onClick={handleSignOut} variant=\"outline-info\"  size=\"lg\">Sign Out</Button>;\n}\n\nfunction AccountInfo(props) {\n    return (\n        <section className=\"Spacing\">\n            <h5>Signed In As:</h5>\n            <h5>{props.userName}</h5>\n        </section>\n    );\n}","import React, { Suspense, lazy, useState } from \"react\";\nimport {BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\nimport Home from \"./pages/Home\";\nimport PrivateGallery from \"./pages/Private\";\nimport PublicGallery from \"./pages/Public\";\nimport Header from \"./components/Header\";\nexport default function AppRouter() {\n    return (\n            <Router>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <Header />\n                    </header>\n                        {/* A <Switch> looks through its children <Route>s and\n                            renders the first one that matches the current URL. */}\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Home />\n                            </Route>\n                            <Route exact path=\"/gallery/private\">\n                                <PrivateGallery />\n                            </Route>\n                            <Route exact path=\"/gallery/public\">\n                                <PublicGallery />\n                            </Route>\n                        </Switch>\n                </div>\n            </Router>\n    );\n  }\n\n","import './App.css';\nimport AppRouter from './Router';\n\nfunction App() {\n  return (\n    <AppRouter />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}